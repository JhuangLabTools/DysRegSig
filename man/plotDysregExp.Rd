% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DysReg_2.2.3.R
\name{plotDysregExp}
\alias{plotDysregExp}
\title{Visualize expression pattern of a gene dysreglaiton between conditions}
\usage{
plotDysregExp(tf, tar, exp.1, exp.2, 
              exp1.label, exp2.label, 
              method, dysreg, conf.int.level, 
              cor.method = 'pearson', ...)
}
\arguments{
\item{tf}{The TF of a gene dysregulation.}

\item{tar}{The target of a gene dysregulation.}

\item{exp.1}{Expression matrix of a special condition. Columns correspond to genes, rows correspond to experiments. The matrix is expected to be already normalized.}

\item{exp.2}{Expression matrix of an another special condition. Columns correspond to genes, rows correspond to experiments. The matrix is expected to be already normalized.}

\item{exp1.label}{The label condition of exp.1.}

\item{exp2.label}{The label condition of exp.2.}

\item{method}{The method of dysregulation analysis, "DysReg", "DiffCor", or "DiffCorPlus".}

\item{dysreg}{If method is "DysReg", this parameter offers the results of \code{\link{DysReg}}.}

\item{conf.int.level}{Level controlling confidence region.}

\item{cor.method}{Which correlation coefficient (or covariance) is to be computed. One of "pearson" (default) or "spearman", can be abbreviated. the parameter is used while parameter method is "DiffCor", or "DiffCorPlus".}

\item{...}{Other parameters passed to \link{ggscatter}.}
}
\description{
Visualize expression pattern of a gene dysreglaiton between conditions.
}
\examples{
\donttest{
data(ExpData)
data(tf2tar)
data(ClinData)

group.1 <- ClinData$sample[which(ClinData$binaryResponse == 'CR/PR')]
exp.1 <- ExpData[,colnames(ExpData) \%in\% group.1]

group.2 <- ClinData$sample[which(ClinData$binaryResponse == 'SD/PD')]
exp.2 <- ExpData[,colnames(ExpData) \%in\% group.2]


dysreg.out <- DysReg(exp.1 = exp.1, exp.2 = exp.2, tf2tar, 
                     de.genes = NULL, de.pval = 0.05, 
                     grn.method = 'Boruta', pValue = 0.01, ci = 0.90)

dysreg.res <- dysreg.out$dysreg

plotDysregExp(tf = dysreg.res$TF[1], tar = dysreg.res$Target[1],
              exp.1 = exp.1, exp.2 = exp.2, 
              exp1.label = 'Response', exp2.label = 'No-response',
              dysreg = dysreg.res, method ='DysReg', 
              conf.int.level = 0.95)
              
}

}
