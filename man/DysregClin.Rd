% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DysReg_2.2.3.R
\name{DysregClin}
\alias{DysregClin}
\title{Analyse the association of individual gene dysregualtion with clinical factor}
\usage{
DysregClin(tf, tar, exp.data, 
           clin.data, clin.data.type, 
           divide.point = median)
}
\arguments{
\item{tf}{The TF of a gene dysregulation.}

\item{tar}{The target of a gene dysregulation.}

\item{exp.data}{Expression matrix. Columns correspond to genes, rows correspond to experiments. The matrix is expected to be already normalized.}

\item{clin.data}{The clinical data. The surv.data must include at least three colomns, "sample", "time", "status".}

\item{clin.data.type}{The type of clinical data, such as "continuous", "discrete", or "survival".}

\item{divide.point}{The point used to divide samples into subgroups, such as median point.}
}
\value{
The significance of the association between gene dysregualtion and clinical factor.
}
\description{
Divide samples into different subgroups based the expression value of TF and target of a special gene dysregulation, and analyse its association with clinical factor.
}
\examples{
\donttest{
data(ExpData)
data(tf2tar)
data(ClinData)

group.1 <- ClinData$sample[which(ClinData$binaryResponse == 'CR/PR')]
exp.1 <- ExpData[,colnames(ExpData) \%in\% group.1]

group.2 <- ClinData$sample[which(ClinData$binaryResponse == 'SD/PD')]
exp.2 <- ExpData[,colnames(ExpData) \%in\% group.2]

set.seed(1234)
test.genes <- sample(1:nrow(ExpData),1000)

tmp.1 <- exp.1[test.genes,]
tmp.2 <- exp.2[test.genes,]

dysreg.out <- DysReg(exp.1 = tmp.1, exp.2 = tmp.2, tf2tar, 
                     de.genes = NULL, de.pval = 0.05, 
                     grn.method = 'Boruta', 
                     pValue = 0.01, ci = 0.90, verbose = T)

dysreg.res <- dysreg.out$dysreg


# for continuous data type                                         
clin.data <- ClinData[,c("sample", "FMOne mutation burden per MB")]
clin.data <- clin.data[!is.na(clin.data$`FMOne mutation burden per MB`),]
head(clin.data)

DysregClin(tf = dysreg.res$TF[1], tar = dysreg.res$Target[1], 
           exp.data = ExpData, clin.data = clin.data,
           clin.data.type = 'continuous')


#for discrete data type                                           
clin.data <- ClinData[,c("sample", "Immune phenotype")]
clin.data <- clin.data[!is.na(clin.data$`Immune phenotype`),]
head(clin.data)

DysregClin(tf = dysreg.res$TF[1], tar = dysreg.res$Target[1], 
           exp.data = ExpData, clin.data = clin.data, 
           clin.data.type = 'discrete',
           divide.point = median)
                  

# for survival data type                                        
clin.data <- ClinData[,c("sample", "os","censOS")]
clin.data <- clin.data[!is.na(clin.data$os) & !is.na(clin.data$censOS),]
colnames(clin.data)[2:3] <- c('time','status')
head(clin.data)

DysregClin(tf = dysreg.res$TF[1], tar = dysreg.res$Target[1], 
           exp.data = ExpData, clin.data = clin.data, 
           clin.data.type = 'survival')
}

}
